# Publish package on release branch if it's tagged with 'v*'

name: build & release

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
        branch: [main, master]
        tags:
            - "v*"

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    release:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                python-versions: ["3.8"]

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4

            - name: build change log
              id: build_changelog
              uses: mikepenz/release-changelog-builder-action@v3.2.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-versions }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install tox-gh-actions poetry

            - name: publish documentation
              run: |
                  poetry install -E dev
                  poetry run mkdocs build
                  git config --global user.name Docs deploy
                  git config --global user.email docs@dummy.bot.com
                  poetry run mike deploy -p -f --ignore `poetry version --short`
                  poetry run mike set-default -p `poetry version --short`

            - name: Build wheels and source tarball
              run: |
                  poetry lock
                  poetry build

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: Release ${{ github.ref_name }}
                  body: ${{ steps.build_changelog.outputs.changelog }}
                  draft: false
                  prerelease: false

            - name: publish to PYPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  user: __token__
                  password: ${{ secrets.PYPI_API_TOKEN }}
                  skip_existing: true
